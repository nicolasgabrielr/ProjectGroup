  <head>
    <title>Editar - Notificar | Sistema de Actas</title>
  </head>

      <div class="column2 col s9" >
        <embed class="height650" src="<%= @record.path %>" type="application/pdf" width="100%" height="600px" />
      </div>

      <div class="column1 col s3 z-depth-2">
        <form action="/myrecords" method="get" >
        <button class="btn btn1 waves-effect waves-light col s12 card-panel brown lighten-4">Cancelar / Omitir</button>
            </form><br>
        <form id="tagform"class="taggform" action="/tagg" method="post">
          <label for="fname">Fecha de subida:</label><br>
          <input type="text" name="realtime" value="<%= @record.realtime.strftime("%d/%m/%y") %>" class="button"readonly><br>
          <label for="fname">Descripción:</label><br>
          <input type="text" name="description" value="<%= @record.description %>"  class="button"><br>
          <label for="fname">N° de Resolución:</label><br>
          <input type="text" name="resolution" value="<%= @record.resolution %>" class="button"><br>
          <input type="text" name="doc" value ="<%= @record.id %>" class="button" hidden><br>
          <h5>Notificar a personas:</h5>

          <div id="myDIV">
            <input class="button col s8"type="text" id="myInput" placeholder="Ingrese DNI sin espacios ni puntos..." >
            <span onclick="newElement()" class="addBtn brown lighten-4">Añadir</span>
          </div>
          <div class="notifications col s12" >
            <div class="col s6 to-notify-list" >
              <p>A notificar</p>
              <div class="dni-box">
                <ul id="myUL">
                  <div class="clearfix"></div>
                </ul>
              </div>
            </div>
            <div class="col s6 notificated-list">
            <p>Ya notificadas:</p>
              <div class="dni-box">
              <ul><%if @dni_docc != nil %>
                <%@dni_docc.each do |elem| %>
                <lu><%=elem.dni%><br></lu>
              </ul>
               <% end %>
              <% end %>
            </div>
            </div>
          </div>
          <button id="tagging" class="btn btn1 waves-effect waves-light col s12 card-panel brown lighten-4">Guardar</button>
        </form>
        </div>
<script src="websocket.js" type="text/javascript"></script>
<script>

// Create a "close" button and append it to each list item
var myNodelist = document.getElementsByTagName("LI");
var i;
for (i = 0; i < myNodelist.length; i++) {
  var span = document.createElement("SPAN");
  var txt = document.createTextNode("\u00D7");
  span.className = "close";
  span.appendChild(txt);
  myNodelist[i].appendChild(span);
}

// Click on a close button to hide the current list item
var close = document.getElementsByClassName("close");
var i;
for (i = 0; i < close.length; i++) {
  close[i].onclick = function() {
    var div = this.parentElement;
    div.style.display = "none";
  }
}
// Create a new list item when clicking on the "Add" button
function newElement() {
  var x = document.createElement("input");
  var li = document.createElement("li");
  var inputValue = document.getElementById("myInput").value;
  var t = document.createTextNode(inputValue);

  li.appendChild(t);
  if (inputValue === '') {
    alert("You must write something!");
  } else {
    document.getElementById("myUL").appendChild(li);
    document.getElementById("myUL").appendChild(x);
  }
  document.getElementById("myInput").value = "";
  x.setAttribute("type","hidden");
  x.setAttribute("name","tagg[]");
  x.setAttribute("value",inputValue);

  var span = document.createElement("SPAN");
  var txt = document.createTextNode("\u00D7");
  span.className = "close";
  span.appendChild(txt);
  li.appendChild(span);

  for (i = 0; i < close.length; i++) {
    close[i].onclick = function() {
      var div = this.parentElement;
      div.style.display = "none";
    }
  }
}
</script>
<script type="text/javascript">
  window.onload = function(){
      (function(){
          var show = function(el){
              return function(msg){ el.innerHTML = msg + '<br />' + el.innerHTML; }
          }(document.getElementById('msgs'));
          var ws = new WebSocket('ws://' + window.location.host + window.location.pathname);
          ws.onopen = function() { show('websocket opened'); };
          ws.onclose = function() { show('websocket closed'); }
          ws.onmessage = function(m) {
      <%notification_unchecked = Notification.where(user_id: session[:user_id], checked: false).all
           if notification_unchecked
        n=0
        notification_unchecked.each{|d| n=n+1}
        @newalert = n
        end %>
              var txt = document.createTextNode(<%= @newalert%>);
              var x = document.createElement("p");
              document.getElementById("count").setAttribute("style","display:none;");
              x.appendChild(txt);
              x.setAttribute("id","count");
              document.getElementById("notification").appendChild(x);
          };
          var sender = function(f){
              var input = document.getElementById('tagging');
              input.onclick = function(){ ws.send(1);};
              return false;
          }
          }(document.getElementById('tagform'));
      })();
  }
</script>
